@model List<Job2Tour>
@using System.Text.RegularExpressions

@{
    ViewData["Title"] = "Job Übersicht";
}

<h3>Aktuelle Job Übersicht</h3>
<br />



<form asp-controller="Home" id="Jobs" asp-action="Index" enctype="multipart/form-data">
    <div class="row form-group">
        <div class="col-2">
            <div class="col-form-label">
                Von:
            </div>
        </div>
        <div class="col-3">
            <input class="form-control" type="date" id="dateFrom" name="dateFrom" placeholder="DD.MM.YYYY"  />
        </div>
        <div class="col-2">
            <button class="btn btn-primary" type="submit">Anzeigen</button>
        </div>
    </div>
</form>

<hr />

@if (Model != null)
{ 

    <table id="jobTable" class="table table-bordered table-hover">
        <thead class="thead-dark">
            <tr>
                <th>Datum<br />Fertig bis</th>
                <th>Job</th>
                <th>Beschreibung</th>
                <th>Adresse</th>
                <th>Service</th>
                <th>Tour</th>
                <th>&nbsp;</th>

            </tr>
        </thead>

        <tbody>

            @{
                foreach (Job2Tour job in Model)
                {

                        <tr onclick="showModal(@job.IdTourJob)" style="@if(job.InOut == "OUT"){<text>background-color:#F2F3F4</text>}">
                            <td nowrap>
                                @{

                                    @job.JobDate.ToString("dd.MM.yyyy"); <br />

                                    if (job.InOut == "OUT")
                                    {
                                        string returnDT = @job.JobDateReturn.ToString();
                                        returnDT = Regex.Replace(returnDT, "00:00:00$", "");

                                        <text>(</text>@returnDT<text>)</text><br />
                                    }
                                    if (!String.IsNullOrEmpty(job.Time))
                                    {
                                        @job.Time<text> Uhr</text><br />
                                    }
                                    if (!String.IsNullOrEmpty(job.ReadyTime))
                                    {
                                        <text>Fertig: </text>@job.ReadyTime<text> Uhr</text>
                                    }

                                }
                            </td>

                                @{

                                    if (job.IdJobState == 5)
                                    {
                                        <td nowrap>
                                            @job.Number<br />@job.DeliveryType<br />Zumietung
                                        </td>
                                    }
                                    else
                                    {
                                        <td nowrap>
                                            @job.Number<br />@job.DeliveryType
                                        </td>
                                    }

                                }

                                <td>@job.Caption</td>

                                @{
                                    if (job.Address != null)
                                    {
                                        string[] words = @job.Address.Split(';');
                                        <td>
                                            @words[0] <br />
                                            @{
                                                if (@words[1] != "")
                                                {
                                                    @words[1] <br />
                                                }
                                                if (@words[4] != "")
                                                {
                                                    @words[4] <br />
                                                }
                                                if (@words[2] != "")
                                                {
                                                    <text>@words[2]  @words[3]</text>
                                                }
                                            }
                                        </td>
                                    }
                                    else
                                    {
                                        <td>&nbsp;</td>
                                    }

                                }

                                <td>@job.Service</td>
                                <td>@job.TourName</td>
                                <td nowrap>

                                    @{
 
                                            <button onclick="onClickedCreateJobStockPDF(event ,@job.IdJob)" class="btn btn-default" aria-label="PDF">
                                                <span class="fa fa-clipboard-list fa-lg" aria-hidden="true"></span>
                                            </button>
                                        }

                                </td>
                            </tr>
                }
            }

        </tbody>
    </table>
                                    }

<div class="modal fade" id="modalJobDetail" tabindex="-1" role="dialog" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="modalTitle">Modal title</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">

                <h6>Adresse:</h6>
                <div id="modalAddress">
                </div>

                <hr class="col-xs-12">
                <h6>Ansprechpartner:</h6>
                <div id="modalContact">
                </div>

                <hr class="col-xs-12">
                <h6>KontaktInfo:</h6>
                <div id="modalContactPhone">
                </div>

                <hr class="col-xs-12">
                <h6>Zeiten:</h6>
                <div id="modalDateTime">
                </div>

                <hr class="col-xs-12">
                <h6>Gewicht in kg:</h6>
                <div id="modalWeight">
                </div>

                <hr class="col-xs-12">
                <h6>Kommentar:</h6>
                <div id="modalComment">
                </div>

                <hr class="col-xs-12">
                <h6>Inhalt:</h6>

                <div class="table-responsive" id="modalStock">
                </div>

            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>

        $(document).ready(function () {
            $('#jobTable').DataTable({
                "language": {
                    "url": "//cdn.datatables.net/plug-ins/9dcbecd42ad/i18n/German.json"
                }
            });

                document.getElementById('dateFrom').value = '@ViewData["dateFrom"]';

        });

        function showModal(id) {

            $.ajax({
                type: "GET",
                url: "@Url.Action("GetJobDetail")",
                data: { id: id },
                success: function (daten) {

                    var comment = daten.comment.replace(/Storno[\s\S]+$/g, "");
                    comment = comment.replace(/_*/g, "");

                    address = daten.addressTXT.replace(/(?:\r\n|\r|\n)/g, "<br>");


                    var jobDate = new Date(daten.jobDate).toLocaleDateString('de-DE');
                    var time = daten.time;
                    var readyTime = daten.readyTime;

                    var dateTime = "Jobdatum: " + jobDate;

                    if (daten.jobDateReturn ) {
                        var jobDateReturn = new Date(daten.jobDateReturn).toLocaleDateString('de-DE');
                        dateTime = dateTime + "<br />" + "Rückgabe: " + jobDateReturn;
                    }
                    if (daten.time && time != "") {
                        dateTime = dateTime + "<br />" + "Zeit: " + time + " Uhr";
                    }
                    if (daten.readyTime && readyTime != "") {
                        dateTime = dateTime + "<br />" + "Fertig bis: " + readyTime + " Uhr";
                    }

                    $('#modalTitle').text(daten.number + " " + daten.caption + " (" + daten.deliveryType + ")");
                    $('#modalAddress').html(address);
                    $('#modalComment').text(comment);
                    $('#modalWeight').html(daten.weight);
                    $('#modalDateTime').html(dateTime);

                    var str = daten.stock;

                    var table = document.createElement('TABLE');
                    table.setAttribute('class', 'table table-bordered col-xs-12')//this is bootstraps classes
                    var tbdy = document.createElement('TBODY');
                    table.appendChild(tbdy);

                    var output = document.getElementById("modalStock");
                        
                    var temp = new Array();
                    temp = str.split("\r");
                    for (var zxc2 = 0; zxc2 < temp.length; zxc2++) {

                        var temp1 = new Array();
                        temp1 = temp[zxc2].split("\t");

                        if (temp1[1] != undefined) {

                            if (temp1[0] != "") {
                                var tr = document.createElement('TR');
                                tbdy.appendChild(tr);

                                var td = document.createElement('TD');
                                td.appendChild(document.createTextNode(temp1[0]));
                                tr.appendChild(td);

                                var td1 = document.createElement('TD');
                                td1.appendChild(document.createTextNode(temp1[1]));
                                tr.appendChild(td1);
                            } else {
                                var value = td1.innerText + "\n" + temp1[1];
                                td1.innerText = value;
                            }
                        }
                    }

                    if (output.hasChildNodes) {
                        output.removeChild(output.lastChild);
                    }
                    output.appendChild(table);

                    $('#modalJobDetail').modal('show')
                }
             });
        }

        function onClickedCreateJobStockPDF(e, id) {
            var win = window.open("/JobPacklistPdf/CreateJobStockPdf/" + id, '_blank');
            win.document.title = "Packliste für Job";
            myEventHandler(e);
        }

        function myEventHandler(e) {
            if (!e)
                e = window.event;

            //IE9 & Other Browsers
            if (e.stopPropagation) {
                e.stopPropagation();
            }
            //IE8 and Lower
            else {
                e.cancelBubble = true;
            }
        }





        @*function onClickedDeleteButton(id) {

            Swal.fire({
                title: 'Möchtest du das Inserat wirklich löschen?',
                icon: 'error',
                showCloseButton: true,
                focusConfirm: false,
                confirmButtonText:
                    'Ja, löschen!',
            }).then((result) => {
                if (result.isConfirmed) {

                    // Backend call to delete job posting by id
                    $.ajax({
                        type: "POST",
                        url: "@Url.Action("DeleteJobPostingById")",
                        data: { id: id },
                        success: function (msg) {
                            Swal.fire('Wurde gelöscht!', '', 'success').then((result) => {
                                location.reload();
                            });
                        },
                        error: function (msg) {
                            Swal.fire('Ups, etwas ist schief gelaufen!', '', 'error')
                        }
                    });
                }
            })
        }*@

    </script>
}

