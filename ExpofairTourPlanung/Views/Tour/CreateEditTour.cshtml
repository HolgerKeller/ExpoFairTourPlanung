@model ExpofairTourPlanung.Models.Tour

@{
    ViewData["Title"] = "Tourdaten";
}


<form asp-controller="Tour" asp-action="SaveTour" enctype="multipart/form-data">

    <div class="card" style="margin-bottom: 15px;">

        <div class="card-header">
            <h5>Tourdaten:</h5>
        </div>

        <div class="card-body">

            @Html.ValidationSummary(false, "", new { @class = "text-danger" })


            @Html.Hidden("IdTour", (Model != null) ? Model.IdTour : 0)

            @*<input hidden asp-for="IdTour" />*@

            <div class="row form-group">
                <div class="col-6">
                    <label for="Tour">Tourdatum</label>
                    <input class="form-control" asp-for="TourDate" type="date" placeholder="Wann soll die Tour stattfinden" />
                </div>
                <div class="col ">
                    <label for="Tour">Tourbezeichnung</label>
                    <input class="form-control" asp-for="TourName" type="text" placeholder="Bitte Legen Sie eine Tour-Bezeichnung fest" />
                </div>
            </div>

            @if (Model != null)
            {

             <div class="row form-group">
                    <div class="col-6">
                        <label for="Tour">Fahrzeug</label>
                        @Html.DropDownListFor(model => Model.VehicleNr, (SelectList)ViewBag.Vehicles, "Welches Fahrzeug?", new { @class = "form-control", @placeholder = "Fahrzeug auswählen" })
                    </div>
                    <div class="col">
                        <label for="Tour">Fahrer</label>
                        @Html.DropDownListFor(model => Model.Driver, (SelectList)ViewBag.Employees, "Wer ist der Fahrer?", new { @class = "form-control", @placeholder = "Wer ist der Fahrer?" })

                    </div>
             </div>
             <div class="row form-group">
                    <div class="col ">
                        <label for="Tour">Verantwortlicher</label>
                        @Html.DropDownListFor(model => Model.Master, (SelectList)ViewBag.Employees, "Wer ist Verantwortlich?", new { @class = "form-control", @placeholder = "Wer ist verantworlich?" })

                    </div>
                    <div class="col">
                        <label for="Tour">Team</label>
                        @Html.DropDownListFor(model => Model.Team, (SelectList)ViewBag.Employees, new { @class = "form-control", @multiple = "multiple", @placeholder = "Wer ist weiterhin im Team?" })

                    </div>
             </div>

             <div class="row form-group">
                    <div class="col">
                        <label for="Tour">Kommentar</label>
                        <textarea rows="6" class="form-control" asp-for="Comment" placeholder="Hier können Sie einen generellen Kommentar eintragen."></textarea>
                    </div>
             </div>
            }
        </div>

        <div class="card-footer">
            <button class="btn btn-primary" type="submit">Speichern</button>
        </div>
    </div>
</form>


@if (Model != null )
{
    <div class="card" style="margin-bottom: 15px;">

        <div class="card-header">
            <h5>folgende Jobs sind der Tour zugeordnet:</h5>
        </div>

        <div class="card-body">
            @{
                List<Job2Tour> tourJobs = ViewBag.tourJobs;
            }
            <table class="table table-sm">
                <tr>
                    <th class="col-2">Zeitraum</th>
                    <th class="col-1">Job-Nr</th>
                    <th class="col-1">Aktion</th>
                    <th class="col-5">Job</th>
                    <th class="col-3">&nbsp;</th>
                </tr>



               @foreach (Job2Tour job in tourJobs)
                {

            <tr>
                <td>@job.Time</td>
                <td>@job.InOut</td>
                <td>@job.Number</td>
                <td>@job.Caption</td>
                <td class="text-right"  >
                    <button onclick="onClickedDecreaseJobRankingButton(@Model.IdTour, @job.IdJob)" class="btn btn-sm" aria-label="Nach Vorn">
                        <span class="fa fa-arrow-up fa-lg" aria-hidden="true"></span>
                    </button>
                    <button onclick="onClickedIncreaseJobRankingButton(@Model.IdTour, @job.IdJob)" class="btn btn-sm" aria-label="Nach Hinten">
                        <span class="fa fa-arrow-down fa-lg" aria-hidden="true"></span>
                    </button>

                    <button onclick="onClickedDelJobButton(@Model.IdTour, @job.IdJob)" class="btn btn-default btn-sm" aria-label="Entfernen">
                        <span class="fa fa-minus fa-lg" aria-hidden="true"></span>
                    </button>
                    <a asp-route-id="@job.IdTourJob" asp-controller="Job" asp-action="EditJob" class="btn btn-sm" aria-label="Bearbeiten">
                        <span class="fa fa-edit fa-lg" aria-hidden="true"></span>
                    </a>
                </td>
            </tr>
                }
            </table>
        </div>
    </div>

    <div class="card" style="margin-bottom: 15px;">

        <div class="card-header">
            <h5>folgende Jobs sind bisher keiner Tour zugeordnet:</h5>
        </div>

        <div class="card-body">
            @{
                List<Job2Tour> jobs = ViewBag.freeJobs;
            }
            <table class="table table-sm">
                <tr>
                    <th class="col-1">Akion</th>
                    <th class="col-2">JobNr</th>
                    <th class="col-7">Adresse</th>
                    <th class="col-2">Aktion</th>
                </tr>



           @foreach (Job2Tour job in jobs)
            {
            <tr>
                <td>@job.InOut</td>
                <td>@job.Number</td>
                <td>@job.Caption</td>
                <td class="text-right">
                    <button onclick="onClickedAddJobButton(@Model.IdTour, @job.IdTourJob)" class="btn btn-sm" aria-label="Zufügen">
                        <span class="fa fa-plus fa-lg" aria-hidden="true"></span>
                    </button>
                    <button onclick="showModal(@job.IdTourJob)" class="btn btn-sm" aria-label="Detail">
                        <span class="fa fa-info fa-lg" aria-hidden="true"></span>
                    </button>
            </tr>
            }
            </table>
        </div>
    </div>
}
<div class="modal fade" id="modalJobDetail" tabindex="-1" role="dialog" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="modalTitle">Modal title</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">



                <h6>Adresse:</h6>
                <div id="modalAddress">

                </div>
                <hr class="col-xs-12">
                <h6>Kommentar:</h6>
                <div id="modalComment">

                </div>

                 <hr class="col-xs-12">

                <h6>Inhalt:</h6>
                <div id="modalStock">

                </div>

            </div>
        </div>
    </div>
</div>




@section scripts {

    <script src="~/lib/jquery-validation/dist/jquery.validate.min.js"></script>
    <script src="~/lib/jquery-validation/dist/additional-methods.min.js"></script>
    <script src="~/lib/jquery-validation-unobtrusive/jquery.validate.unobtrusive.min.js"></script>

    <script>

        $(function () {
            $('#VehicleNr').SumoSelect();
            $('#Driver').SumoSelect();
            $('#Master').SumoSelect();
            $('#Team').SumoSelect();

        })


        function showModal(id) {

 
            $.ajax({
                type: "GET",
                url: "@Url.Action("GetJobDetail")",
                data: { id: id },
                success: function (daten) {

                    var stock = daten.stock.replace(/(?:\r\n|\r|\n)/g, "<br>");
                    var comment = daten.comment.replace(/Storno\.*?/g, "");

                    $('#modalTitle').text(daten.caption + " (" + daten.inOut + ")");
                    $('#modalAddress').text(daten.address);
                    $('#modalComment').text(comment);
                    $('#modalStock').html(stock);

                    $('#modalJobDetail').modal('show')

                }
             });
        }


        function onClickedAddJobButton(id, idTourJob) {

                    // Backend call to Add Job to the tour
                    $.ajax({
                        type: "POST",
                        url: "@Url.Action("AddJob2Tour")",
                        data: { id: id, idTourJob: idTourJob },
                        success: function (msg) {
                               location.reload();
                        },
                        error: function (msg) {
                            Swal.fire('Ups, etwas ist schief gelaufen!', '', 'error')
                        }
                    });
        }
        function onClickedDelJobButton(id, idJob) {

                    // Backend call to Add Job to the tour
                    $.ajax({
                        type: "POST",
                        url: "@Url.Action("DelJobFromTour")",
                        data: { id: id, idJob: idJob  },
                        success: function (msg) {
                               location.reload();
                        },
                        error: function (msg) {
                            Swal.fire('Ups, etwas ist schief gelaufen!', '', 'error')
                        }
                    });
        }
                function onClickedIncreaseJobRankingButton(id, idJob) {

                    // Backend call to Add Job to the tour
                    $.ajax({
                        type: "POST",
                        url: "@Url.Action("IncreaseJobRanking")",
                        data: { id: id, idJob: idJob  },
                        success: function (msg) {
                               location.reload();
                        },
                        error: function (msg) {
                            Swal.fire('Ups, etwas ist schief gelaufen!', '', 'error')
                        }
                    });
        }
        function onClickedDecreaseJobRankingButton(id, idJob) {

                    // Backend call to Add Job to the tour
                    $.ajax({
                        type: "POST",
                        url: "@Url.Action("DecreaseJobRanking")",
                        data: { id: id, idJob: idJob  },
                        success: function (msg) {
                               location.reload();
                        },
                        error: function (msg) {
                            Swal.fire('Ups, etwas ist schief gelaufen!', '', 'error')
                        }
                    });
        }




    </script>

}
